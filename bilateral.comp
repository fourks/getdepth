#version 430 core

//
// 5x5 バイラテラルフィルタ
//

// ワークグループのサイズ
layout(local_size_x = 32, local_size_y = 32) in;

// 入力
layout (rgba32f, binding = 0) readonly uniform image2D position;

// 出力
layout (binding = 1) writeonly uniform image2D smoothed;

// 分散
uniform float variance = 10.0;

// 重み付き画素値の合計と重みの合計を求める
void f(inout vec3 csum, inout vec3 wsum, const in vec3 base, const in vec4 c, const in float w)
{
  vec3 d = c.xyz - base;
  vec3 e = exp(-0.5 * d * d / variance) * w;
  csum += c.xyz * e;
  wsum += e;
}

// 重み付き平均を求める
void main()
{
  ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
  vec3 csum = imageLoad(position, pos).xyz;
  vec3 wsum = vec3(1.0);
  vec3 base = csum;

  f(csum, wsum, base, imageLoad(position, pos + ivec2(-2, -2)), 0.018315639);
  f(csum, wsum, base, imageLoad(position, pos + ivec2(-1, -2)), 0.082084999);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 0, -2)), 0.135335283);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 1, -2)), 0.082084999);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 2, -2)), 0.018315639);

  f(csum, wsum, base, imageLoad(position, pos + ivec2(-2, -1)), 0.082084999);
  f(csum, wsum, base, imageLoad(position, pos + ivec2(-1, -1)), 0.367879441);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 0, -1)), 0.60653066);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 1, -1)), 0.367879441);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 2, -1)), 0.082084999);

  f(csum, wsum, base, imageLoad(position, pos + ivec2(-2,  0)), 0.135335283);
  f(csum, wsum, base, imageLoad(position, pos + ivec2(-1,  0)), 0.60653066);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 1,  0)), 0.60653066);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 2,  0)), 0.135335283);

  f(csum, wsum, base, imageLoad(position, pos + ivec2(-2,  1)), 0.082084999);
  f(csum, wsum, base, imageLoad(position, pos + ivec2(-1,  1)), 0.367879441);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 0,  1)), 0.60653066);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 1,  1)), 0.367879441);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 2,  1)), 0.082084999);

  f(csum, wsum, base, imageLoad(position, pos + ivec2(-2,  2)), 0.018315639);
  f(csum, wsum, base, imageLoad(position, pos + ivec2(-1,  2)), 0.082084999);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 0,  2)), 0.135335283);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 1,  2)), 0.082084999);
  f(csum, wsum, base, imageLoad(position, pos + ivec2( 2,  2)), 0.018315639);

  imageStore(smoothed, pos, vec4(csum / wsum, 1.0));
}
